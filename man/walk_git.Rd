% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/walk_git.R
\name{walk_git}
\alias{walk_git}
\title{Pipe-able, vectorized, and lightweight implementation of git in R}
\usage{
walk_git(path, command, verbose = FALSE, stop_on_error = TRUE, ...)
}
\arguments{
\item{path}{Path to one or multiple Git repos.}

\item{command}{A Git command, e.g. "status" or "log --oneline -n 1".}

\item{verbose}{Print Git's output?}

\item{stop_on_error}{If Git fails, do you want an R error?}

\item{...}{Other arguments passed to \link{system}.}
}
\value{
\code{walk_git()} is called for its side effect; it returns \code{path}
invisibly.
}
\description{
Apply a Git command to each \code{path}.
}
\examples{
library(magrittr)

# helper
walk <- function(x, f, ...) {
  lapply(x, f, ...)
  invisible(x)
}

repos <- file.path(tempdir(), paste0("repo", 1:2))
repos \%>\% walk(dir.create)

# Fails because the repo isn't initialized
repos \%>\%
  walk_git("status") \%>\%
  try()

# Don't throw an error
repos \%>\%
  walk_git("status", stop_on_error = FALSE)

repos \%>\% walk_git("init")

repos \%>\% walk_git("status")
repos \%>\% walk_git("status", verbose = TRUE)

repos \%>\%
  walk_git("add .") \%>\%
  walk_git("commit -m 'Initialize' --allow-empty") \%>\%
  walk_git("log --oneline -n 1", verbose = TRUE)

# Cleanup
walk(repos, unlink, recursive = TRUE)
}
